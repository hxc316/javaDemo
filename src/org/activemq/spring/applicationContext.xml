<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
      xmlns:aop="http://www.springframework.org/schema/aop"      
      xmlns:tx="http://www.springframework.org/schema/tx"     
      xmlns:context="http://www.springframework.org/schema/context"      
      xsi:schemaLocation="
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd       
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd           
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd       
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">
	
	
    <bean id="jmsFactory" class="org.apache.activemq.ActiveMQConnectionFactory">  
        <property name="brokerURL" value="${jms.brokerURL}" />
        <property name="userName" value="${jms.username}" />
		<property name="password" value="${jms.password}" />
		<property name="dispatchAsync" value="true" /> 
		<property name="useAsyncSend" value="true" />
    </bean>  
     
    <!-- 设置发送连接池,提高性能 --> 
    <bean id="JmsSenderFactory" class="org.apache.activemq.pool.PooledConnectionFactory" destroy-method="stop">
    	<property name="connectionFactory" ref="jmsFactory" /> 
    	<property name="maxConnections" value="100"></property> 
    </bean>
    
   <!-- 设置接收连接池,提高性能   -->
    <bean id="JmsReveiverFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
         <property name="connectionFactory" ref="jmsFactory" /> 
    	<property name="maxConnections" value="100"></property> 
   </bean>  
   
    <!-- Spring JMS Template -->
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">  
        <property name="connectionFactory" ref="JmsSenderFactory" />  
        <property name="defaultDestination" ref="destination" />
        <!-- 区别它采用的模式:false是p2p;true是订阅   -->
        <property name="pubSubDomain" value="false" />
        <property name="messageConverter">
            <bean class="org.springframework.jms.support.converter.SimpleMessageConverter" />  
        </property>
        
    </bean>
    
    <!-- Spring JMS Template -->
    <bean id="jmsTemplate2" class="org.springframework.jms.core.JmsTemplate">  
        <property name="connectionFactory" ref="JmsReveiverFactory" />  
        <property name="defaultDestination" ref="destination" />
        <!-- 区别它采用的模式:false是p2p;true是订阅   -->
        <property name="pubSubDomain" value="false" />
        <property name="messageConverter">
            <bean class="org.springframework.jms.support.converter.SimpleMessageConverter" />  
        </property>
        
    </bean>
      

    
	
	<!-- 发送消息的目的地（一个队列） -->  
    <bean id="destination" class="org.apache.activemq.command.ActiveMQQueue">  
        <!-- 设置消息队列的名字 -->  
        <constructor-arg index="0" value="hello" />
    </bean>
    
    <!-- 消息监听  --> 
    <bean id="listenerContainer"  
        class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="concurrentConsumers" value="${jms.concurrentConsumers}" />
        <property name="connectionFactory" ref="JmsReveiverFactory" />  
        <property name="destinationName" value="${jms.queueName}" />  
        <property name="messageListener" ref="messageConsumer" />
        <property name="sessionTransacted" value="true"/>  
        <property name="pubSubNoLocal" value="true"></property>  
    </bean>   
     
    <!-- 消息消费者 -->
    <bean id="messageConsumer"
        class="com.voole.jms.MessageConsumer">
        <property name="jmsTemplate2" ref="jmsTemplate2"></property>  
    </bean>
    
    <!-- 消息生产 -->
    <bean id="messageProducer"
        class="com.voole.jms.MessageProducer">
        <property name="jmsTemplate" ref="jmsTemplate"></property>  
    </bean>
</beans>
